{"version":3,"sources":["reducers/tickers.js","reducers/index.js","utils.js","Sidebar/Folder.js","Sidebar/Sidebar.js","Sidebar/SidebarContainer.js","actions/index.js","SearchBar/SearchBar.js","SearchBar/SearchBarContainer.js","Chart/Chart.js","Chart/ChartContainer.js","StockTracker.js","App.js","serviceWorker.js","index.js"],"names":["initialState","chartData","normalize","tickers","date","state","arguments","length","undefined","action","type","Object","objectSpread","toConsumableArray","concat","ticker","colors","defineProperty","color","data","folder","filter","getUrl","dateRange","baseColors","pickColor","Math","floor","random","Folder","props","react_default","a","createElement","className","items","map","item","style","background-color","border-color","key","onClick","handleClick","Sidebar","title","Sidebar_Folder","connect","ownProps","dispatch","deleteTicker","SearchBar","onSubmit","handleSubmit","htmlFor","name","onChange","handleChange","id","aria-describedby","placeholder","error","SearchBarContainer","value","event","_this","setState","target","preventDefault","src_SearchBar_SearchBar","this","Component","Chart","_ref","keys","LineChart","width","height","XAxis","dataKey","YAxis","domain","Tooltip","CartesianGrid","stroke","strokeDasharray","Line","store","finalData","j","node","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","toFixed","err","return","push","getFormattedChartData","StockTracker","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","selectedDateRange","searchError","mapTickerData","tickerData","dataPoint","getTickerInfo","clearData","fetch","then","res","json","result","updateDate","addTicker","console","warn","handleSearchSubmit","toUpperCase","includes","handleDateClick","handleNormalizeClick","toggleNormalize","dateRanges","1d","1m","3m","6m","ytd","dateRangeKeys","sidebarTitle","searchBarTitle","prevProps","prevState","_this2","_this3","SearchBar_SearchBarContainer","ChartContainer","SidebarContainer","data-toggle","updateTickerRange","_ref2","App","src_StockTracker_0","Boolean","window","location","hostname","match","createStore","rootReducer","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.395b0451.chunk.js","sourcesContent":["const initialState = {\r\n  chartData: [],\r\n  normalize: false,\r\n  tickers: [],\r\n  date: []\r\n};\r\n\r\nconst tickers = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case 'ADD_TICKER':\r\n      return {\r\n        ...state,\r\n        tickers: [...state.tickers, action.ticker],\r\n        colors: {\r\n          ...state.colors,\r\n          [action.ticker]: action.color\r\n        },\r\n        chartData: {\r\n          ...state.chartData,\r\n          [action.ticker]: {\r\n            data: action.data,\r\n            folder: action.folder  \r\n          }\r\n        }\r\n      }\r\n    case 'DELETE_TICKER': {\r\n      const chartData = {\r\n        ...state.chartData\r\n      };\r\n      delete chartData[action.ticker];\r\n\r\n      const colors = {\r\n        ...state.colors\r\n      };\r\n      delete colors[action.ticker];\r\n\r\n      return {\r\n        ...state,\r\n        chartData,\r\n        colors,\r\n        tickers: state.tickers.filter(ticker => ticker !== action.ticker)\r\n      }\r\n    }\r\n    case 'UPDATE_TICKER_RANGE':\r\n      return {\r\n        ...state,\r\n        chartData: {\r\n          ...state.chartData,\r\n          [action.ticker]: {\r\n            ...state.chartData[action.ticker],\r\n            data: action.data\r\n          }\r\n        }\r\n      }\r\n    case 'UPDATE_DATE':\r\n      return {\r\n        ...state,\r\n        date: action.date\r\n      }\r\n    case 'TOGGLE_NORMALIZE':\r\n      return {\r\n        ...state,\r\n        normalize: !state.normalize\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default tickers;\r\n","import tickers from './tickers';\r\n\r\nexport default tickers;","export const getUrl = (ticker, dateRange) => `https://api.iextrading.com/1.0/stock/${ticker}/chart/${dateRange}`;\r\n\r\nconst baseColors = [\r\n  \"#82ca9d\", \"#8084d8\", \"#8be07f\", \"#d884d4\",\r\n  \"#83b5ab\", \"#84d0d8\", \"#b284d8\", \"#d88684\"\r\n];\r\n\r\nexport const pickColor = () => {\r\n  return baseColors[Math.floor(Math.random() * baseColors.length)];\r\n}","import React from 'react';\r\nimport './Sidebar.css';\r\n\r\nconst styleMaker = color => {\r\n  return {\"background-color\": color, \"border-color\": color, color: \"black\"};\r\n}\r\n\r\nconst Folder = props => {\r\n  return (\r\n    <div className=\"btn-group-vertical list\">\r\n      {props.items.map(item => {\r\n        return  (\r\n          <button className=\"btn btn-success\" style={styleMaker(props.colors[item])} key={item} onClick={() => props.handleClick(item)}>\r\n            {item}\r\n          </button>\r\n        )\r\n      })}\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport default Folder;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Folder from './Folder';\r\nimport './Sidebar.css';\r\n\r\nconst Sidebar = props => {\r\n  return (\r\n    <div className=\"sidebar-outline\">\r\n      <h3>{props.title}</h3>\r\n      <hr />\r\n      <Folder\r\n        colors={props.colors}\r\n        handleClick={props.handleClick}\r\n        items={props.items}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nSidebar.propTypes = {\r\n  colors: PropTypes.object.isRequired,\r\n  handleClick: PropTypes.func.isRequired,\r\n  items: PropTypes.array.isRequired,\r\n  title: PropTypes.string.isRequired\r\n}\r\n\r\nexport default Sidebar;\r\n","import { connect } from 'react-redux';\r\n\r\nimport { deleteTicker } from '../actions';\r\nimport Sidebar from './Sidebar';\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n  title: ownProps.title,\r\n  items: state.tickers,\r\n  colors: state.colors\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  handleClick: ticker => dispatch(deleteTicker(ticker)),\r\n});\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Sidebar);\r\n","import { pickColor } from '../utils';\r\n\r\nexport const addTicker = ({ticker, folder, color, data}) => ({\r\n  type: 'ADD_TICKER',\r\n  color: color || pickColor(),\r\n  folder: folder || 'default',\r\n  ticker,\r\n  data\r\n});\r\n\r\nexport const deleteTicker = ticker => ({\r\n  type: 'DELETE_TICKER',\r\n  ticker\r\n});\r\n\r\nexport const updateDate = date => ({\r\n  type: 'UPDATE_DATE',\r\n  date\r\n});\r\n\r\nexport const updateTickerRange = ({ticker, data}) => ({\r\n  type: 'UPDATE_TICKER_RANGE',\r\n  ticker,\r\n  data\r\n});\r\n\r\nexport const toggleNormalize = () => ({\r\n  type: 'TOGGLE_NORMALIZE'\r\n});\r\n","import React from 'react';\r\nimport './SearchBar.css';\r\n\r\nconst SearchBar = props => {\r\n  return (\r\n    <div className=\"search\">\r\n      <form className=\"form-inline\" onSubmit={props.handleSubmit}>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"InputTicker\">{props.name}:</label>\r\n          <input onChange={props.handleChange} name={props.name} type=\"text\" className=\"form-control mx-sm-2\" id=\"InputTicker\" aria-describedby=\"tickerHelp\" placeholder=\"Enter Symbol\" />\r\n        </div>\r\n        <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\r\n      </form>\r\n      <div className=\"error\">\r\n        {props.error || <span>&nbsp;&nbsp;</span>}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SearchBar;\r\n","import React, { Component } from 'react';\r\nimport SearchBar from './SearchBar';\r\n\r\nclass SearchBarContainer extends Component {\r\n  state = {\r\n    value: \"\"\r\n  }\r\n\r\n  handleChange = event => {\r\n    this.setState({value: event.target.value});\r\n    event.preventDefault();\r\n  }\r\n\r\n  handleSubmit = event => {\r\n    this.props.handleSubmit(this.state.value);\r\n    event.preventDefault();\r\n  }\r\n  \r\n  render() {\r\n    return (\r\n      <SearchBar\r\n        error={this.props.error}\r\n        handleSubmit={this.handleSubmit}\r\n        handleChange={this.handleChange}\r\n        name={this.props.name}\r\n        value={this.state.value}\r\n      />\r\n    )\r\n  }\r\n}\r\n\r\nexport default SearchBarContainer;","// https://blog.logrocket.com/data-visualization-in-react-using-react-d3-c35835af16d0\r\nimport React from 'react';\r\nimport {LineChart, XAxis, YAxis, CartesianGrid, Line, Tooltip} from 'recharts';\r\nimport \"./Chart.css\";\r\n\r\nconst Chart = ({data, keys, colors}) => {\r\n  return (\r\n    <div className=\"chart\">\r\n      <LineChart width={800} height={500} data={data}>\r\n        <XAxis dataKey=\"date\"/>\r\n        <YAxis type=\"number\" domain={['auto', 'auto']} />\r\n        <Tooltip />\r\n        <CartesianGrid stroke=\"#eee\" strokeDasharray=\"5 5\"/>\r\n        {keys && keys.map(key => <Line type=\"monotone\" dataKey={key} key={key} stroke={colors[key]} />)}\r\n      </LineChart>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Chart;\r\n","import { connect } from 'react-redux';\r\n\r\nimport Chart from './Chart';\r\n\r\nconst getFormattedChartData = store => {\r\n  const tickers = store.tickers;\r\n  const normalize = store.normalize;\r\n  const date = store.date;\r\n  let finalData = [];  \r\n  if (tickers && tickers.length > 0) {\r\n    const length = date.length;\r\n    for (let j=0; j < length; j++) {\r\n      const node = {date: date[j]};\r\n      for (let ticker of tickers) {\r\n        if (normalize) {\r\n          node[ticker] = (store.chartData[ticker].data[j]/store.chartData[ticker].data[0]).toFixed(4);\r\n        } else {\r\n          node[ticker] = store.chartData[ticker].data[j];\r\n        }\r\n      }\r\n      finalData.push(node);\r\n    }\r\n  }\r\n  return finalData;\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  data: getFormattedChartData(state),\r\n  keys: state.tickers,\r\n  colors: state.colors\r\n});\r\n\r\nexport default connect(mapStateToProps, {})(Chart);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport SidebarContainer from './Sidebar/SidebarContainer';\r\nimport SearchBarContainer from './SearchBar/SearchBarContainer';\r\nimport ChartContainer from './Chart/ChartContainer';\r\nimport { getUrl, pickColor } from './utils';\r\nimport {\r\n  addTicker,\r\n  updateDate,\r\n  updateTickerRange,\r\n  toggleNormalize\r\n} from './actions';\r\n\r\nimport \"./StockTracker.css\";\r\n\r\n\r\nclass StockTracker extends Component {\r\n  constructor() {\r\n    super();\r\n    this.dateRanges = {\r\n      \"1d\": \"One Day\",\r\n      \"1m\": \"One Month\",\r\n      \"3m\": \"Three Months\",\r\n      \"6m\": \"Six Months\",\r\n      \"ytd\": \"Year to Date\",\r\n    };\r\n    this.dateRangeKeys = Object.keys(this.dateRanges);\r\n    this.sidebarTitle = \"Tickers Shown\";\r\n    this.searchBarTitle = \"Ticker\";\r\n  }\r\n\r\n  state = {\r\n    data: {},\r\n    normalize: false,\r\n    selectedDateRange: \"1m\",\r\n    searchError: null\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (this.state.selectedDateRange !== prevState.selectedDateRange) {\r\n      this.props.tickers.map(ticker => this.getTickerInfo(ticker, true));\r\n    }\r\n  }\r\n\r\n  mapTickerData = (tickerData, key) => {\r\n    return tickerData.map(dataPoint => dataPoint[key]);\r\n  }\r\n\r\n  getTickerInfo = (ticker, clearData) => {    \r\n    // Make API call\r\n    fetch(getUrl(ticker, this.state.selectedDateRange))\r\n      .then(res => res.json())\r\n      .then(\r\n        result => {\r\n          // Massage Data\r\n          const tickerData = this.mapTickerData(result, \"close\");\r\n          if (clearData || !this.props.data || !this.props.data.length) {\r\n            const date = this.mapTickerData(result, \"date\");\r\n            this.props.updateDate(date);\r\n          }\r\n          \r\n          this.props.addTicker({ticker, color: pickColor(), data: tickerData});\r\n        },\r\n        error => {\r\n          console.warn(error);\r\n          this.setState({searchError: `Could not find ticker: ${ticker}`});\r\n        }\r\n      );\r\n  }\r\n\r\n  handleSearchSubmit = value => {\r\n    const ticker = value.toUpperCase();\r\n    if (this.props.tickers.includes(ticker)) {\r\n      this.setState({searchError: `${ticker} already displayed.`});\r\n    } else {\r\n      this.setState({searchError: null});\r\n      this.getTickerInfo(ticker, false);\r\n    }\r\n  }\r\n\r\n  handleDateClick = selectedDateRange => {    \r\n    this.setState({selectedDateRange});\r\n  }\r\n\r\n  handleNormalizeClick = () => {\r\n    this.props.toggleNormalize();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"second-row\">\r\n          <SearchBarContainer\r\n            error={this.state.searchError}\r\n            handleSubmit={this.handleSearchSubmit}\r\n            name={this.searchBarTitle}\r\n          />\r\n          <button className=\"normalize btn btn-primary\" onClick={this.handleNormalizeClick}>\r\n            {this.props.normalize ? \"Unnormalize?\": \"Normalize?\"}\r\n          </button>\r\n        </div>\r\n        <div className=\"second-row\">\r\n          <ChartContainer />\r\n          <SidebarContainer\r\n            title={this.sidebarTitle}\r\n          />\r\n        </div>\r\n        <div className=\"date-range btn-group btn-group-toggle\" data-toggle=\"buttons\">\r\n          {\r\n            this.dateRangeKeys.map(date => {\r\n              return (\r\n                <button className={`btn btn-outline-secondary ${this.state.selectedDateRange === date ? \"active\":null}`} key={date} onClick={() => this.handleDateClick(date)}>\r\n                  {this.dateRanges[date]}\r\n                </button>\r\n              )\r\n            })\r\n          }\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nStockTracker.propTypes = {\r\n  updateDate: PropTypes.func.isRequired,\r\n  addTicker: PropTypes.func.isRequired,\r\n  toggleNormalize: PropTypes.func.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  tickers: state.tickers,\r\n  normalize: state.normalize\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  addTicker: tickerData => dispatch(addTicker(tickerData)),\r\n  toggleNormalize: () => dispatch(toggleNormalize()),\r\n  updateDate: date => dispatch(updateDate(date)),\r\n  updateTickerRange: (ticker, data) => dispatch(updateTickerRange({ticker, data}))\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(StockTracker);\r\n","import React from 'react';\r\nimport StockTracker from './StockTracker';\r\n\r\nfunction App() {\r\n  return <StockTracker />\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux'\r\nimport { createStore } from 'redux'\r\nimport rootReducer from './reducers'\r\nimport App from './App';\r\nimport './index.css';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n);\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}