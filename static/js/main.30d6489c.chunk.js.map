{"version":3,"sources":["Sidebar/Sidebar.js","Sidebar/SidebarContainer.js","SearchBar/SearchBar.js","SearchBar/SearchBarContainer.js","Chart/Chart.js","Chart/ChartContainer.js","utils.js","StockTracker.js","App.js","serviceWorker.js","index.js"],"names":["Sidebar","props","react_default","a","createElement","className","title","items","map","item","style","color","colors","background-color","border-color","key","onClick","handleClick","SidebarContainer","state","name","value","handleChange","event","_this","setState","target","preventDefault","handleSubmit","src_Sidebar_Sidebar","this","Component","SearchBar","onSubmit","for","onChange","type","id","aria-describedby","placeholder","error","SearchBarContainer","src_SearchBar_SearchBar","Chart","_this$props","width","height","data","keys","LineChart","XAxis","dataKey","YAxis","domain","Tooltip","CartesianGrid","stroke","strokeDasharray","Line","ChartContainer","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","formatData","normalize","filter","length","date","finalData","j","node","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","toFixed","err","return","push","formattedData","src_Chart_Chart","getUrl","ticker","dateRange","concat","StockTracker","tickers","selectedDateRange","searchBarTitle","searchError","sidebarTitle","pickColor","baseColors","Math","floor","random","mapTickerData","tickerData","dataPoint","getTickerInfo","rawTicker","clearData","toUpperCase","fetch","then","res","json","result","dateData","toConsumableArray","objectSpread","includes","console","log","defineProperty","warn","fetchAllData","handleSearchSubmit","handleDateClick","newDateRange","handleTickerClick","handleNormalizeClick","dateRanges","1d","1m","3m","6m","ytd","dateRangeKeys","prevProps","prevState","_this2","SearchBar_SearchBarContainer","Chart_ChartContainer","Sidebar_SidebarContainer","data-toggle","App","src_StockTracker_0","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.30d6489c.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Sidebar.css';\r\n\r\nconst styleMaker = color => {\r\n  return {\"background-color\": color, \"border-color\": color, color: \"black\"};\r\n}\r\n\r\nconst Sidebar = props => {\r\n  return (\r\n    <div className=\"sidebar-outline\">\r\n      <h3>{props.title}</h3>\r\n      <hr />\r\n      <div className=\"btn-group-vertical list\">\r\n        {props.items.map(item => {\r\n          return  (\r\n            <button className=\"btn btn-success\" style={styleMaker(props.colors[item])} key={item} onClick={() => props.handleClick(item)}>\r\n              {item}\r\n            </button>\r\n          )\r\n        })}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport default Sidebar;\r\n","import React, { Component } from 'react';\r\nimport Sidebar from './Sidebar';\r\n\r\nclass SidebarContainer extends Component {\r\n  state = {\r\n    name: \"Ticker\",\r\n    value: \"\"\r\n  }\r\n\r\n  handleChange = event => {\r\n    this.setState({value: event.target.value});\r\n    event.preventDefault();\r\n  }\r\n\r\n  handleSubmit = event => {\r\n    this.props.handleSubmit(this.state.value);\r\n    event.preventDefault();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Sidebar\r\n        colors={this.props.colors}\r\n        handleClick={this.props.handleClick}\r\n        items={this.props.items}\r\n        title={this.props.title}\r\n      />\r\n    )\r\n  }\r\n}\r\n\r\nexport default SidebarContainer;\r\n","import React from 'react';\r\nimport './SearchBar.css';\r\n\r\nconst SearchBar = props => {\r\n  return (\r\n    <div className=\"search\">\r\n      <form className=\"form-inline\" onSubmit={props.handleSubmit}>\r\n        <div className=\"form-group\">\r\n          <label for=\"InputTicker\">{props.name}:</label>\r\n          <input onChange={props.handleChange} name={props.name} type=\"text\" className=\"form-control mx-sm-2\" id=\"InputTicker\" aria-describedby=\"tickerHelp\" placeholder=\"Enter Symbol\" />\r\n        </div>\r\n        <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\r\n      </form>\r\n      <div className=\"error\">\r\n        {props.error || <span>&nbsp;&nbsp;</span>}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SearchBar;\r\n","import React, { Component } from 'react';\r\nimport SearchBar from './SearchBar';\r\n\r\nclass SearchBarContainer extends Component {\r\n  state = {\r\n    value: \"\"\r\n  }\r\n\r\n  handleChange = event => {\r\n    this.setState({value: event.target.value});\r\n    event.preventDefault();\r\n  }\r\n\r\n  handleSubmit = event => {\r\n    this.props.handleSubmit(this.state.value);\r\n    event.preventDefault();\r\n  }\r\n  \r\n  render() {\r\n    return (\r\n      <SearchBar\r\n        error={this.props.error}\r\n        handleSubmit={this.handleSubmit}\r\n        handleChange={this.handleChange}\r\n        name={this.props.name}\r\n        value={this.state.value}\r\n      />\r\n    )\r\n  }\r\n}\r\n\r\nexport default SearchBarContainer;","// https://blog.logrocket.com/data-visualization-in-react-using-react-d3-c35835af16d0\r\nimport React, { Component } from 'react';\r\nimport {LineChart, XAxis, YAxis, CartesianGrid, Line, Tooltip} from 'recharts';\r\nimport \"./Chart.css\";\r\n\r\nclass Chart extends Component {\r\n  render() {\r\n    const {width, height, data, keys, colors} = this.props;\r\n    return (\r\n      <div className=\"chart\">\r\n        <LineChart width={width} height={height} data={data}>\r\n          <XAxis dataKey=\"date\"/>\r\n          <YAxis type=\"number\" domain={['auto', 'auto']} />\r\n          <Tooltip />\r\n          <CartesianGrid stroke=\"#eee\" strokeDasharray=\"5 5\"/>\r\n          {keys && keys.map(key => <Line type=\"monotone\" dataKey={key} key={key} stroke={colors[key]} />)}\r\n        </LineChart>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Chart;\r\n","import React, { Component } from 'react';\r\nimport Chart from './Chart';\r\n\r\nclass ChartContainer extends Component {\r\n  constructor() {\r\n    super();\r\n    this.width = 800;\r\n    this.height = 500;\r\n  }\r\n  formatData = (data, normalize) => {\r\n    const keys = Object.keys(data).filter(key => key !== \"date\");\r\n    if (keys.length > 0) {\r\n      const length = data.date.length;\r\n      let finalData = [];\r\n      for (let j=0; j < length; j++) {\r\n        const node = {date: data.date[j]};\r\n        for (let key of keys) {\r\n          if (normalize) {\r\n            node[key] = (data[key][j]/data[key][0]).toFixed(4);\r\n          } else {\r\n            node[key] = data[key][j];\r\n          }\r\n        }\r\n        finalData.push(node);\r\n      }\r\n      return finalData;\r\n    }\r\n  };\r\n  render() {\r\n    const {data, keys, normalize, colors} = this.props;\r\n    const formattedData = this.formatData(data, normalize);\r\n    return (\r\n      <Chart \r\n        colors={colors}\r\n        data={formattedData}\r\n        keys={keys}\r\n        width={this.width}\r\n        height={this.height}\r\n      />\r\n    )\r\n  }\r\n}\r\n\r\nexport default ChartContainer;\r\n","export const getUrl = (ticker, dateRange) => `https://api.iextrading.com/1.0/stock/${ticker}/chart/${dateRange}`;\r\n","import React, { Component } from 'react';\r\nimport SidebarContainer from './Sidebar/SidebarContainer';\r\nimport SearchBarContainer from './SearchBar/SearchBarContainer';\r\nimport ChartContainer from './Chart/ChartContainer';\r\nimport \"./StockTracker.css\";\r\nimport {getUrl} from './utils';\r\n\r\n\r\nclass StockTracker extends Component {\r\n  constructor() {\r\n    super();\r\n    this.baseColors = [\r\n      \"#82ca9d\", \"#8084d8\", \"#8be07f\", \"#d884d4\",\r\n      \"#83b5ab\", \"#84d0d8\", \"#b284d8\", \"#d88684\"\r\n    ];\r\n    this.dateRanges = {\r\n      \"1d\": \"One Day\",\r\n      \"1m\": \"One Month\",\r\n      \"3m\": \"Three Months\",\r\n      \"6m\": \"Six Months\",\r\n      \"ytd\": \"Year to Date\",\r\n    };\r\n    this.dateRangeKeys = Object.keys(this.dateRanges);\r\n  }\r\n\r\n  state = {\r\n    colors: {},\r\n    data: {},\r\n    tickers: [],\r\n    normalize: false,\r\n    selectedDateRange: \"1m\",\r\n    searchBarTitle: \"Ticker\",\r\n    searchError: null,    \r\n    sidebarTitle: \"Tickers Shown\"\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (this.state.selectedDateRange !== prevState.selectedDateRange) {\r\n      this.fetchAllData();\r\n    }\r\n  }\r\n\r\n  pickColor = () => {\r\n    return this.baseColors[Math.floor(Math.random() * this.baseColors.length)];\r\n  }\r\n\r\n  mapTickerData = (tickerData, key) => {\r\n    return tickerData.map(dataPoint => dataPoint[key]);\r\n  }\r\n\r\n  getTickerInfo = (rawTicker, clearData) => {\r\n    const ticker = rawTicker.toUpperCase();\r\n    // Make API call\r\n    fetch(getUrl(ticker, this.state.selectedDateRange))\r\n      .then(res => res.json())\r\n      .then(\r\n        result => {\r\n          // Massage Data\r\n          const tickerData = this.mapTickerData(result, \"close\");\r\n          const dateData = {};\r\n          if (!this.state.data.date || clearData) {\r\n            dateData.date = this.mapTickerData(result, \"date\");\r\n          }\r\n          const tickers = [...this.state.tickers];\r\n          const colors = {...this.state.colors};\r\n          if(!this.state.tickers.includes(ticker)) {\r\n            tickers.push(ticker);\r\n            console.log(this.pickColor())\r\n            colors[ticker] = this.pickColor();\r\n            console.log(colors);\r\n          }\r\n          // Put data into state\r\n          const data = {...this.state.data, ...dateData, [ticker]: tickerData};\r\n          this.setState({\r\n            data,\r\n            tickers,\r\n            colors\r\n          });\r\n        },\r\n        error => {\r\n          console.warn(error);\r\n          this.setState({searchError: `Could not find ticker: ${ticker}`});\r\n        }\r\n      );\r\n  }\r\n\r\n  fetchAllData = () => {\r\n    this.state.tickers.map(ticker => this.getTickerInfo(ticker, true));\r\n  }\r\n\r\n  handleSearchSubmit = value => {\r\n    if (this.state.tickers.includes(value)) {\r\n      this.setState({searchError: `${value} already displayed.`});\r\n    } else {\r\n      this.setState({searchError: null});\r\n      this.getTickerInfo(value, false);\r\n    }\r\n  }\r\n\r\n  handleDateClick = newDateRange => {\r\n    this.setState({selectedDateRange: newDateRange});\r\n  }\r\n\r\n  handleTickerClick = value => {\r\n    const data = {...this.state.data};\r\n    delete data[value];\r\n    const colors = {...this.state.colors};\r\n    delete colors[value];\r\n    this.setState({\r\n      tickers: this.state.tickers.filter( a => a !== value),\r\n      colors,\r\n      data\r\n    });\r\n  }\r\n\r\n  handleNormalizeClick = () => {\r\n    this.setState({normalize: !this.state.normalize});\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"second-row\">\r\n          <SearchBarContainer\r\n            error={this.state.searchError}\r\n            handleSubmit={this.handleSearchSubmit}\r\n            name={this.state.searchBarTitle}\r\n          />\r\n          <button className=\"normalize btn btn-primary\" onClick={this.handleNormalizeClick}>\r\n            {this.state.normalize ? \"Unnormalize?\": \"Normalize?\"}\r\n          </button>\r\n        </div>\r\n        <div className=\"second-row\">\r\n          <ChartContainer\r\n            data={this.state.data}\r\n            keys={this.state.tickers}\r\n            normalize={this.state.normalize}\r\n            colors={this.state.colors}\r\n          />\r\n          <SidebarContainer\r\n            handleClick={this.handleTickerClick}\r\n            items={this.state.tickers}\r\n            title={this.state.sidebarTitle}\r\n            colors={this.state.colors}\r\n          />\r\n        </div>\r\n        <div className=\"date-range btn-group btn-group-toggle\" data-toggle=\"buttons\">\r\n          {\r\n            this.dateRangeKeys.map(date => {\r\n              return (\r\n                <button className={`btn btn-outline-secondary ${this.state.selectedDateRange === date ? \"active\":null}`} key={date} onClick={() => this.handleDateClick(date)}>\r\n                  {this.dateRanges[date]}\r\n                </button>\r\n              )\r\n            })\r\n          }\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default StockTracker;\r\n","import React from 'react';\r\nimport StockTracker from './StockTracker';\r\n\r\nfunction App() {\r\n  return <StockTracker />\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}